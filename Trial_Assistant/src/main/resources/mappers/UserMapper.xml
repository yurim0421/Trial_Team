<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.pr.user.mapper.IUserMapper">
	<!-- namespace는 어떤 interface를 참조하는지 지정  -->
	
	
	<!--VO객체이름과 DB의 컬럼명이 다를 때 맞춰주는 작업  -->
<!-- 	 <resultMap type="com.spring.pr.command.UserBasicVO" id="UserBasicMap">
		기본키는 id 태그를 사용하고 나머지는 result 태그를 사용
		<id column = "JOIN_ID" property="JoinId"/>
		<result column ="JOIN_SOC_NUM" property = "JoinSocNum"/>
		<result column ="ANM_NO_SEQ" property = "AnmNum"/>
		<result column ="JOIN_PERSON" property = "JoinPerson"/>

	</resultMap> 
	
	 <resultMap type="com.spring.pr.command.UserDetailVO" id="UserDetailMap">
		기본키는 id 태그를 사용하고 나머지는 result 태그를 사용
		<id column = "JOIN_SOC_NUM" property="JoinSocNum"/>
		<result column ="JOIN_NAME" property = "JoinName"/>
		<result column ="JOIN_PW" property = "JoinPw"/>
		<result column ="JOIN_GEN" property = "JoinGen"/>
		<result column ="JOIN_EMAIL" property = "JoinEmail"/>
		<result column ="JOIN_PHONE" property = "JoinPhone"/>
		<result column ="JOIN_ADDR_BASIC" property = "JoinAddrBasic"/>
		<result column ="JOIN_ADDR_DETAIL" property = "JoinAddrDetail"/>
		<result column ="JOIN_DATE" property = "JoinDate"/>
		<result column ="JOIN_RIGHT" property = "JoinRight"/>

	</resultMap>   -->
	
	  <resultMap type="com.spring.pr.command.UserVO" id="UserMap">
		<!-- 기본키는 id 태그를 사용하고 나머지는 result 태그를 사용 -->
		<!-- <id column = "JOINSOCNUM" property="JoinSocNum"/> -->
		<result column = "JOINID" property="JOINID"/>
		<result column ="JOINSOCNUM" property = "JOINSOCNUM"/>
		<result column ="ANMNOSEQ" property = "ANMNOSEQ"/>
		<result column ="JOINPERSON" property = "JOINPERSON"/>
		
		<result column ="JOINNAME" property = "JOINNAME"/>
		<result column ="JOINPW" property = "JOINPW"/>
		<result column ="JOINGEN" property = "JOINGEN"/>
		<result column ="JOINEMAIL" property = "JOINEMAIL"/>
		<result column ="JOINPHONE" property = "JOINPHONE"/>
		
		<result column ="JOINPHONE" property = "JOINADDRNUM"/>
		<result column ="JOINADDRBASIC" property = "JOINADDRBASIC"/>
		<result column ="JOINADDRDETAIL" property = "JOINADDRDETAIL"/>

		<result column ="JOINRIGHT" property = "JOINRIGHT"/>
		
		<result column ="INSNAME" property = "INSNAME"/>
		<result column ="INSSOCNUM" property = "INSSOCNUM"/>
		<result column ="INSADDRNUM" property = "INSADDRNUM"/>
		<result column ="INSADDRBASIC" property = "INSADDRBASIC"/>
		<result column ="INSADDRDETAIL" property = "INSADDRDETAIL"/>

	</resultMap> 
	 
	<select id="idCheck" resultType="int" >
		SELECT COUNT(*) FROM USERBASIC
		WHERE
		JOINID = #{JOINID}
	</select>
	
	
	<insert id="join">
		INSERT ALL
		INTO UserBasic(JOINID, JOINSOCNUM, JOINPERSON) 
			VALUES(#{JOINID}, #{JOINSOCNUM}, #{JOINPERSON})
		INTO UserDetail(JOINSOCNUM, JOINNAME, JOINPW, JOINGEN, JOINEMAIL, JOINPHONE, JOINADDRNUM, JOINADDRBASIC, JOINADDRDETAIL, JOINRIGHT, INSNAME, INSSOCNUM, INSADDRNUM, INSADDRBASIC, INSADDRDETAIL) 
			VALUES(#{JOINSOCNUM}, #{JOINNAME}, #{JOINPW}, #{JOINGEN}, #{JOINEMAIL}, #{JOINPHONE}, #{JOINADDRNUM}, #{JOINADDRBASIC}, #{JOINADDRDETAIL}, #{JOINRIGHT}, #{INSNAME}, #{INSSOCNUM}, #{INSADDRNUM}, #{INSADDRBASIC}, #{INSADDRDETAIL})
		SELECT * FROM dual
	</insert>
	
	
	<select id ="login" resultMap="UserMap">
		SELECT *
		FROM USERBASIC B, USERDETAIL D
		WHERE B.JOINSOCNUM = D.JOINSOCNUM
		AND B.JOINID = #{JOINID}
		AND D.JOINPW = #{JOINPW}
	</select>
	
	<select id="idSearch" resultMap="UserMap">
		SELECT * FROM USERBASIC B, USERDETAIL D
		WHERE
		B.JOINSOCNUM = #{JOINSOCNUM}
		AND D.JOINNAME = #{JOINNAME}
	</select>
	
	<select id="pwSearch" resultMap="UserMap">
		SELECT *
		FROM USERBASIC B, USERDETAIL D
		WHERE B.JOINSOCNUM = D.JOINSOCNUM
		AND D.JOINNAME = #{JOINNAME}
		AND D.JOINSOCNUM = #{JOINSOCNUM}
	</select>
	
	<update id="newPwRegist">
		update USERDETAIL
		SET JOINPW = #{JOINPW}
		where JOINNAME = #{JOINNAME} 
		and JOINSOCNUM = #{JOINSOCNUM} 
	</update>
	
	
	
	<select id="getInfo" resultMap="UserMap">
		SELECT
			B.JOINID,
			D.JOINNAME,
			D.JOINSOCNUM,
			D.JOINGEN,
			D.JOINEMAIL,
			D.JOINPHONE,
			D.JOINADDRNUM,
			D.JOINADDRBASIC,
			D.JOINADDRDETAIL,
			D.INSNAME,
			D.INSSOCNUM,
			D.INSADDRNUM,
			D.INSADDRBASIC,
			D.INSADDRDETAIL
		FROM USERDETAIL D LEFT OUTER JOIN USERBASIC B
		ON D.JOINSOCNUM = B.JOINSOCNUM
		WHERE B.JOINID = #{JOINID}
	</select>
	
	<update id="updateUser">
		UPDATE USERDETAIL D
		SET D.JOINADDRNUM = #{JOINADDRNUM},
			D.JOINADDRBASIC = #{JOINADDRBASIC},
           	D.JOINADDRDETAIL = #{JOINADDRDETAIL},
           	D.INSNAME = #{INSNAME},
           	D.INSSOCNUM = #{INSSOCNUM},
           	D.INSADDRNUM = #{INSADDRNUM},
			D.INSADDRBASIC = #{INSADDRBASIC},
           	D.INSADDRDETAIL = #{INSADDRDETAIL}
		WHERE D.JOINSOCNUM = (
	        SELECT JOINSOCNUM 
	        FROM USERBASIC B
	        WHERE JOINID = #{JOINID})
	</update>
	
	
	
	<delete id="deleteUser1">
		delete from USERBASIC B
		where exists
		(select 1 from USERDETAIL D
		where B.JOINSOCNUM = D.JOINSOCNUM
		and d.JOINPW = #{JOINPW})
		
	</delete>
	
	<delete id="deleteUser2">
	
		
		delete from USERDETAIL 
		where JOINPW = #{JOINPW}
		and JOINNAME = #{JOINNAME}
	</delete>
</mapper>
